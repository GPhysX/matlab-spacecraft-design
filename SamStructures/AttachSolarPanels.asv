function [stowed,deploy] = AttachSolarPanels(panel,structure,dim,s)
% Processes the attachment of the solar panels onto the +X and -X sides of
% the structure. If the solar panels are larger than the structure panels,
% then initiate deployable solar panels. If not, then cover both sides with
% solar panels. 

% In stowed config, the solar panels stack on top of each other. In
% deployed config, the solar panels will be displayed as folding
% components. 

L = dim(1);
W = dim(2);
H = dim(3);

stowed = struct('Name','Solar Panel','Mass',1,'Dim',[0,0,panel.Dim(3)],'CG_XYZ',[]...
    ,'Volume',[],'Vertices',[]);
deploy = struct('Name','Solar Panel','Mass',1,'Dim',[0,0,panel.Dim(3)],'CG_XYZ',[]...
    ,'Volume',[],'Vertices',[]);

% NEED TO FIND MASS TO VOLUME CONVERSION

panel_A = panel.Dim(1)*panel.Dim(2);
panel_t = panel.Dim(3);
avail_A = structure.Surface(1).availableA;
count = ceil(panel_A/avail_A);
if s == 1
    T = 0;
    for i = 1:count
    stowed(i).Dim(1) = structure.Dim(1);
    stowed(i).Dim(2) = structure.Dim(3);
    
    bottomVert = [L/2,W/2,T; L/2,-W/2,T; 
        L/2+panel_t+T,W/2,0; L/2+panel_t,-W/2,0]; 
    topVert = [L/2,W/2,H; L/2,-W/2,H; 
        L/2+panel_t,W/2,H; L/2+panel_t,-W/2,H]; 
    
    stowed(i).Vertices = [bottomVert; topVert];
    end

elseif s == 2
    stowed.Dim(1) = structure.Dim(1);
    stowed.Dim(2) = structure.Dim(3);
    bottomVert = [-L/2,W/2,0; -L/2,-W/2,0; 
        -(L/2+panel_t),W/2,0; -(L/2+panel_t),-W/2,0]; 
    topVert = [-L/2,W/2,H; -L/2,-W/2,H; 
        -(L/2+panel_t),W/2,H; -(L/2+panel_t),-W/2,H]; 
end
    
end