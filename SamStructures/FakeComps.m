function [fake_comp] = FakeComps()
% Generates fake comp struct to test with

payload_comp = struct('Name','Payload','Subsystem','Payload','Shape',...
    'Rectangle','Mass',1,'Dim',[.1,.1,.1],'CG_XYZ',[],'Vertices',[]...
    ,'LocationReq','Outside','Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);

comms_comp = struct('Name','Filters/Diplexers','Subsystem','Comms','Shape','Rectangle'...
    ,'Mass',1,'Dim',[.1,.1,.05],'CG_XYZ',[],'Vertices',[],'LocationReq','Inside'...
    ,'Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);

eps_comp = struct('Name','Solar Panel','Subsystem','EPS','Shape',...
    'Rectangle','Mass',1,'Dim',[.2,.2,.005],'CG_XYZ',[],'Vertices',[],'LocationReq','Outside'...
    ,'Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);

eps_comp2 = struct('Name','Solar Panel','Subsystem','EPS','Shape','Rectangle'...
    ,'Mass',1,'Dim',[.2,.2,.005],'CG_XYZ',[],'Vertices',[],'LocationReq','Outside'...
    ,'Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);

eps_comp3 = struct('Name','Battery','Subsystem','EPS','Shape','Rectangle','Mass',.03...
    ,'Dim',[.1,.12,.01],'CG_XYZ',[],'Vertices',[],'LocationReq','Inside'...
    ,'Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);

adcs_comp = struct('Name','Reaction Wheel','Subsystem','ADCS','Shape','Cylinder',...
    'Mass',.3,'Dim',[.05,.1,0],'CG_XYZ',[],'Vertices',[],'LocationReq','Inside'...
    ,'Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);

avionics_comp = struct('Name','OBC','Subsystem','Avionics','Shape','Rectangle','Mass',.2...
    ,'Dim',[.1,.1,.02],'CG_XYZ',[],'Vertices',[],'LocationReq','Inside'...
    ,'Orientation',[],'Thermal',[],'InertiaMatrix',[],'Volume',[]);


fake_comp = [payload_comp comms_comp eps_comp eps_comp2 eps_comp3 adcs_comp avionics_comp];

end

